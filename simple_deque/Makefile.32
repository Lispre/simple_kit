#COMAKE2 edit-mode: -*- Makefile -*-
####################32Bit Mode####################
ifeq ($(shell uname -m),i686)
CC=gcc
CXX=g++
CXXFLAGS=-g \
  -pipe \
  -W \
  -Wall \
  -fPIC
CFLAGS=-g \
  -pipe \
  -W \
  -Wall \
  -fPIC
CPPFLAGS=-D_GNU_SOURCE \
  -D__STDC_LIMIT_MACROS \
  -DVERSION=\"1.9.8.7\"
INCPATH=-I. \
  -I./include \
  -I./output \
  -I./output/include
DEP_INCPATH=

#============ CCP vars ============
CCHECK=@ccheck.py
CCHECK_FLAGS=
PCLINT=@pclint
PCLINT_FLAGS=
CCP=@ccp.py
CCP_FLAGS=


#COMAKE UUID
COMAKE_MD5=d034e550bd455cd61c9be413e9a6d125  COMAKE


.PHONY:all
all:comake2_makefile_check test_sdeque libsdeque.a 
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40mall[0m']"
	@echo "make all done"

.PHONY:comake2_makefile_check
comake2_makefile_check:
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40mcomake2_makefile_check[0m']"
	#in case of error, update 'Makefile' by 'comake2'
	@echo "$(COMAKE_MD5)">comake2.md5
	@md5sum -c --status comake2.md5
	@rm -f comake2.md5

.PHONY:ccpclean
ccpclean:
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40mccpclean[0m']"
	@echo "make ccpclean done"

.PHONY:clean
clean:ccpclean
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40mclean[0m']"
	rm -rf test_sdeque
	rm -rf ./output/bin/test_sdeque
	rm -rf libsdeque.a
	rm -rf ./output/lib/libsdeque.a
	rm -rf ./output/include/sdeque.h
	rm -rf test_sdeque_test_sdeque.o
	rm -rf sdeque_sdeque.o

.PHONY:dist
dist:
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40mdist[0m']"
	tar czvf output.tar.gz output
	@echo "make dist done"

.PHONY:distclean
distclean:clean
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40mdistclean[0m']"
	rm -f output.tar.gz
	@echo "make distclean done"

.PHONY:love
love:
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40mlove[0m']"
	@echo "make love done"

test_sdeque:libsdeque.a \
  test_sdeque_test_sdeque.o \
  libsdeque.a
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40mtest_sdeque[0m']"
	$(CXX) test_sdeque_test_sdeque.o \
  libsdeque.a -Xlinker "-("   -lpthread \
  -lrt -Xlinker "-)" -o test_sdeque
	mkdir -p ./output/bin
	cp -f --link test_sdeque ./output/bin

libsdeque.a:sdeque_sdeque.o \
  sdeque.h
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40mlibsdeque.a[0m']"
	ar crs libsdeque.a sdeque_sdeque.o
	mkdir -p ./output/lib
	cp -f --link libsdeque.a ./output/lib
	mkdir -p ./output/include
	cp -f --link sdeque.h ./output/include

test_sdeque_test_sdeque.o:test_sdeque.c \
  sdeque.h
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40mtest_sdeque_test_sdeque.o[0m']"
	$(CC) -c $(INCPATH) $(DEP_INCPATH) $(CPPFLAGS) $(CFLAGS)  -o test_sdeque_test_sdeque.o test_sdeque.c

sdeque_sdeque.o:sdeque.c \
  sdeque.h
	@echo "[[1;32;40mCOMAKE:BUILD[0m][Target:'[1;32;40msdeque_sdeque.o[0m']"
	$(CC) -c $(INCPATH) $(DEP_INCPATH) $(CPPFLAGS) $(CFLAGS)  -o sdeque_sdeque.o sdeque.c

endif #ifeq ($(shell uname -m),i686)


